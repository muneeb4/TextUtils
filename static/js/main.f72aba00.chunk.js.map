{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","classNAme","style","color","heading","onChange","event","target","value","backgroundColor","placeholder","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","replace","filter","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f72aba00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n<nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n<div className=\"container-fluid\">\r\n  <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n      </li>\r\n      {/* <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n      </li> */}\r\n    </ul>\r\n    {/* <form className=\"d-flex\" role=\"search\">\r\n      <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n      <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n    </form> */}\r\n    <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick = {props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n  </div>\r\n</div>\r\n</nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes  = {\r\ntitle : PropTypes.string.isRequired,\r\naboutText : PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n   title : 'Set title here',\r\n   aboutText : 'set about text'\r\n};\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\n\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n    //console.log(text);\r\n        let newText= text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert('Converted to Upper Case','success');\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n    //  console.log(text);\r\n          let newText= text.toLowerCase();\r\n          setText(newText);\r\n          props.showAlert('Converted to Lower Case','success');\r\n      }\r\n\r\n      const handleClear = () => {\r\n            setText('');\r\n            props.showAlert('text Cleared','success');\r\n        }\r\n\r\n      const  handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n         setText(newText.join(\" \"));\r\n         props.showAlert('Extra Spaces Removed','success');\r\n        \r\n      }\r\n\r\n      const handleCopy = () => {\r\n        let newText = document.getElementById(\"myBox\");\r\n        newText.select();\r\n        navigator.clipboard.writeText(newText.value)\r\n        props.showAlert('Copied to Clipboard!','success');\r\n      }\r\n\r\n    const handleOnChange = (event) => {\r\n       // console.log(\"On Change\")\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    //text = \"new text\"\r\n    //setText(\"new text\");\r\n  \r\n  return (\r\n     <>\r\n    <div classNAme = 'container' style={{color : props.mode === 'dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n<div className=\"container mb-3\" style={{color : props.mode === 'dark'?'white':'black'}}>\r\n  <textarea className=\"form-control\" onChange={handleOnChange} style = {{backgroundColor : props.mode === 'dark'?'#383838':'white', color : props.mode === 'dark'?'white':'black'}}  placeholder= \"Enter Text here\" value= {text} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n <button className=\"btn btn-primary mx-1 \"onClick={handleUpClick} >Convert to Uppercase</button>\r\n <button className=\"btn btn-primary mx-1 \"onClick={handleLoClick} >Convert to Lowercase</button>\r\n <button className=\"btn btn-primary mx-1 \"onClick={handleCopy} >CopyText</button>\r\n <button className=\"btn btn-primary mx-1 \"onClick={handleClear} >ClearText</button>\r\n <button className=\"btn btn-primary mx-1 \"onClick={handleExtraSpaces} >Remove Extra Spaces</button>\r\n\r\n    </div>\r\n    <div className=\"container my-3\" style={{color : props.mode === 'dark'?'white':'black'}} >\r\n      <h2>Your text Summary</h2>\r\n      \r\n      <p>{text.replace(/\\n/g, \" \").split(' ').filter(value =>  value != \"\").length} and {text.length} characters</p>\r\n      <p>{0.008 * text.replace(/\\n/g, \" \").split(' ').filter(value =>  value != \"\").length} Mins read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return word.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n   props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n     <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Alert","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type) => { setAlert({\n    msg : message,\n    type: type\n    \n  })  \n   setTimeout(() => {\n     setAlert(null);\n   }, 1500); }\n   \n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = \"#383838\"\n      showAlert('dark mode has been enabled','success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\"\n      showAlert('light mode has been enabled','success');\n    }\n    \n  }\n  return (\n  <>\n  {/* <Navbar title=\"Textutils2\" aboutText=\"About\" /> */}\n  {/* <Router> */}\n  <Navbar title=\"Textutils2\" mode = {mode} toggleMode = {toggleMode} aboutText = 'About'/>\n  <Alert alert = {alert}/>\n   <div className=\"container my-3\">\n   {/* <Routes> */}\n          {/* <Route exact path=\"/about\" element = {<About />}/> */}\n          <TextForm showAlert= {showAlert} heading =  \"Enter the text to analyze below\" mode = {mode}/>\n        {/* </Routes> */}\n\n  </div>\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}